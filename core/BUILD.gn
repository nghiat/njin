##----------------------------------------------------------------------------##
## This file is distributed under the MIT License.                            ##
## See LICENSE.txt for details.                                               ##
## Copyright (C) Tran Tuan Nghia <trantuannghia95@gmail.com> 2010             ##
##----------------------------------------------------------------------------##

static_library("core") {
  sources = [
    "allocator.cpp",
    "allocator.h",
    "allocator_internal.cpp",
    "allocator_internal.h",
    "bit_stream.cpp",
    "bit_stream.h",
    "build.h",
    "compiler.h",
    "core_allocators.cpp",
    "core_allocators.h",
    "core_init.cpp",
    "core_init.h",
    "debug.h",
    "dynamic_array.h",
    "dynamic_array.inl",
    "dynamic_lib.h",
    "file.cpp",
    "file.h",
    "file_utils.cpp",
    "file_utils.h",
    "free_list_allocator.cpp",
    "free_list_allocator.h",
    "gfx/cam.cpp",
    "gfx/cam.h",
    "hash_table.cpp",
    "hash_table.h",
    "linear_allocator.h",
    "linear_allocator.inl",
    "loader/dae.cpp",
    "loader/dae.h",
    "loader/obj.cpp",
    "loader/obj.h",
    "loader/png.cpp",
    "loader/png.h",
    "loader/tga.cpp",
    "loader/tga.h",
    "log.cpp",
    "log.h",
    "math/float.h",
    "math/float.inl",
    "math/mat4.h",
    "math/mat4.inl",
    "math/plane.h",
    "math/quat.h",
    "math/quat.inl",
    "math/ray.h",
    "math/ray.inl",
    "math/sphere.h",
    "math/transform.h",
    "math/transform.inl",
    "math/triangle.h",
    "math/vec2.h",
    "math/vec2.inl",
    "math/vec3.h",
    "math/vec3.inl",
    "math/vec4.h",
    "math/vec4.inl",
    "mono_time.h",
    "njtype.h",
    "os.h",
    "os_string.h",
    "path_utils.cpp",
    "path_utils.h",
    "thread.h",
    "utils.h",
    "window/input.h",
    "window/window.h",
  ]

  if (is_win) {
    sources += [
      "debug_win.cpp",
      "dynamic_lib_win.cpp",
      "file_win.cpp",
      "mono_time_win.cpp",
      "os_string_win.cpp",
      "path_utils_win.cpp",
      "thread_win.cpp",
      "window/window_win.cpp",
      "windows_lite.h",
    ]
    libs = [
      "DbgHelp.lib",
      "Gdi32.lib",
      "User32.lib"
    ]
    public_configs = [ ":natvis" ]
  }

  if (is_linux) {
    sources += [
      "debug_linux.cpp",
      "dynamic_lib_linux.cpp",
      "file_linux.cpp",
      "mono_time_linux.cpp",
      "os_string_linux.cpp",
      "path_utils_linux.cpp",
      "thread_unix.cpp",
      "window/window_x11.cpp",
    ]
    libs = [
      "dl",
      "X11",
      "X11-xcb",
      "xcb",
      "xcb-keysyms",
    ]
  }
}

config("natvis") {
  ldflags = [ "/NATVIS:" + rebase_path("math/math.natvis", root_build_dir)]
}
